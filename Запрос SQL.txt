with first_payments as (

select

    s.user_id,

    date(p.transaction_datetime) as transaction_datetime

   

from SKYENG_DB.students s

INNER JOIN (

    select

        user_id,

        min(transaction_datetime) as transaction_datetime

    from SKYENG_DB.payments

    where status_name = 'success' --and classes > 0

group by user_id) p on p.user_id = s.user_id

),

all_dates as (

    select

        distinct date(class_start_datetime) as class_start_datetime

    from SKYENG_DB.classes

    where

        date_part('year', class_start_datetime) = 2016

        and class_status = 'success'

)

, payments_by_dates as (

 

select

    user_id,

    date(transaction_datetime) as transaction_datetime,

    sum(classes) as transaction_balance_change

from SKYENG_DB.payments

where status_name = 'success' --and classes > 0

group by

    user_id,

    date(transaction_datetime)

),

all_dates_by_user as (

select

    fp.user_id,

    ad.class_start_datetime as class_start_datetime

from first_payments fp

 left join all_dates ad on fp.transaction_datetime <= ad.class_start_datetime

),

classes_by_dates as

(

    select

        c.user_id,

        date_trunc('day', c.class_start_datetime) class_date,

        -1 * count(*) as classes

    from skyeng_db.classes c

    where c.class_status in ('success' , 'failed_by_student') and c.class_type <> 'trial'

    group by c.user_id, date_trunc('day', c.class_start_datetime)

 

),

payments_by_dates_cumsum as (

    select

        a.user_id,

        a.class_start_datetime as dt,

        transaction_balance_change,

        sum(transaction_balance_change) over(partition by a.user_id order by a.class_start_datetime rows between unbounded preceding and current row) transaction_balance_change_cs

    from all_dates_by_user a

    left join payments_by_dates b on a.user_id = b.user_id and a.class_start_datetime = b.transaction_datetime


),

classes_by_dates_dates_cumsum as (

    select

        a.user_id,

        a.class_start_datetime as dt,

        classes,

        sum(coalesce(classes,0)) over(partition by a.user_id order by a.class_start_datetime rows between unbounded preceding and current row) classes_cs

    from all_dates_by_user a

    left join classes_by_dates b on a.user_id = b.user_id and a.class_start_datetime = b.class_date

 

),

 

balances as (

    select

        a.user_id,

        a.dt,

        a.transaction_balance_change,

        b.classes,

        a.transaction_balance_change_cs,

        b.classes_cs,

        a.transaction_balance_change_cs + b.classes_cs as balance

    from payments_by_dates_cumsum a

    inner join classes_by_dates_dates_cumsum b on a.user_id = b.user_id and a.dt = b.dt

 

)

--3

--select *

--from balances

--order by user_id, dt

--limit 1000

--4

select

    dt,

    sum(transaction_balance_change) transaction_balance_change,

    sum(classes) classes,

    sum(transaction_balance_change_cs) transaction_balance_change_cs,

    sum(classes_cs) classes_cs,

    sum(balance) balance

from balances

group by dt

order by dt